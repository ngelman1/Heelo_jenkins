// scripted_try/Jenkinsfile - Part 4: Error Handling and Post-Build

node {
    def buildStatus = 'SUCCESS' // Initialize status

    try {
        stage('Checkout') {
            checkout scm
        }

        stage('Build') {
            echo 'Building application...'
            // Simulate a build failure sometimes
            // if (new Random().nextBoolean()) { // Uncomment to randomly fail build
            //     error('Simulating a build failure!') // 'error' step fails the pipeline
            // }
            sh 'echo "Build complete."'
        }

        stage('Test') {
            echo 'Running tests...'
            // Simulate a test failure sometimes
            // if (new Random().nextBoolean()) { // Uncomment to randomly fail tests
            //     sh 'exit 1' // Exiting with non-zero code fails the shell step
            // }
            sh 'echo "Tests passed."'
        }

        stage('Deploy') {
            echo 'Deploying application...'
            sh 'echo "Deployment complete."'
        }

    } catch (Exception e) {
        // 'catch' block executes if any step in the 'try' block fails
        buildStatus = 'FAILURE'
        echo "Pipeline caught an error: ${e.getMessage()}"
        currentBuild.result = 'FAILURE' // Explicitly set Jenkins build result to FAILURE
    } finally {
        // 'finally' block always executes, regardless of success or failure
        stage('Cleanup & Notify') { // A final stage for visualization
            echo 'Running final cleanup and notifications...'
            if (buildStatus == 'SUCCESS') {
                echo 'Pipeline completed successfully. Sending success notification.'
                // notify_success() // Placeholder for a notification function
            } else {
                echo 'Pipeline failed. Sending failure notification.'
                // notify_failure() // Placeholder for a notification function
            }
            sh 'echo "Cleaning up workspace..."'
            cleanWs() // Step from Pipeline Utility Steps plugin to clean workspace
        }
    }
}